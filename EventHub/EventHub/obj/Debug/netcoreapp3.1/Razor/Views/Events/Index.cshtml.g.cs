#pragma checksum "C:\Users\user\Desktop\desktop\wad\wad-coursework\EventHub\EventHub\Views\Events\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3227fa30712e869e12dfcbe8ce174fb80159b25f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Events_Index), @"mvc.1.0.view", @"/Views/Events/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\user\Desktop\desktop\wad\wad-coursework\EventHub\EventHub\Views\_ViewImports.cshtml"
using EventHub;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\user\Desktop\desktop\wad\wad-coursework\EventHub\EventHub\Views\_ViewImports.cshtml"
using EventHub.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3227fa30712e869e12dfcbe8ce174fb80159b25f", @"/Views/Events/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da2de3d111a8e53a4db47708f377b1261757bd9b", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Events_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<h2>Event</h2>
<hr />
<div ng-app=""EventCtrl"">
    <div ng-view>

    </div>

</div>

<script type=""text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js""></script>
<script type=""text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular-route.min.js""></script>


<script type=""text/javascript"">


    var apiURL = 'https://localhost:44320/api/'



    angular
        .module('EventCtrl', ['ngRoute'])
        .config(function ($routeProvider) {
            $routeProvider
                .when('/',
                    {
                        templateUrl: 'pages/event/index.html',
                        controller: 'IndexController'
                    })
                .when('/create',
                    {
                        templateUrl: 'pages/event/create.html',
                        controller: 'CreateController'
                    })
                .when('/details/:Id',
                    {
      ");
            WriteLiteral(@"                  templateUrl: 'pages/event/details.html',
                        controller: 'DetailsController'
                    })

                .when('/edit/:Id',
                    {
                        templateUrl: 'pages/event/edit.html',
                        controller: 'EditDeleteController'
                    })
                .otherwise({
                    redirectTo: '/'
                });

        })
        .controller('IndexController', ['$scope', '$http', function ($scope, $http) {
            $scope.events = [];
            $http.get(apiURL + 'events/')
                .then(function (res) {

                    $scope.events = res.data;
                })

        }])
        .controller('CreateController', ['$scope', '$http', '$location', function ($scope, $http, $location) {
            $scope.event =
            {
                id: 0,
                name: '',
                description: '',
                startDate: '',
              ");
            WriteLiteral(@"  endDate: '',
                location: '',
            };

            $scope.eventCategories = []
            $http.get(apiURL + 'categories/')
                .then(function (res) {
                    $scope.categories = res.data;
                    for (var i = 0; i < $scope.categories.length; i++) {
                        $scope.eventCategories[i] = $scope.categories[i].name;
                    }
                });


            $scope.AddEvent = function () {

                for (var i = 0; i < $scope.categories.length; i++) {
                    if ($scope.categoryName == $scope.categories[i].name) {
                        $scope.categoryId = $scope.categories[i].id;
                    }
                }

                $http.get(apiURL + 'categories/' + $scope.categoryId)
                    .then(function (res) {
                        $scope.event.eventCategory = res.data;
                        $http.post(apiURL + 'events/', $scope.event)
                     ");
            WriteLiteral(@"       .then(function (res) {
                                console.log(""Event created successfully!"");
                                $location.path('/')
                            }, function (error) {
                                console.log(""Error creating user:"", error);
                            }
                            );
                    })

                
            }
        }])
        .controller('DetailsController', ['$scope', '$http', '$routeParams', function ($scope, $http, $routeParams) {
            $scope.details = [];

            $http.get(apiURL + 'events/' + $routeParams.Id)
                .then(function (res) {
                    $scope.details = res.data;
                });

        }])
        .controller('EditDeleteController', ['$scope', '$http', '$location', '$routeParams', function ($scope, $http, $location, $routeParams) {
            $scope.edit = [];

            $http.get(apiURL + 'events/' + $routeParams.Id)
                .the");
            WriteLiteral(@"n(function (res) {
                    $scope.edit = res.data;
                    $scope.edit.startDate = new Date($scope.edit.startDate);
                    $scope.edit.endDate = new Date($scope.edit.endDate);
                });

            $scope.Edit = function () {

                $scope.edit.startDate = new Date($scope.edit.startDate).toISOString().substring(0,19)
                $scope.edit.endDate = new Date($scope.edit.endDate).toISOString().substring(0, 19)
                console.log($scope.edit.startDate);
                $http.put(apiURL + 'events/' + $routeParams.Id, $scope.edit)
                    .then(function (res) {
                        $location.path('/');
                    });
            };
            $scope.Delete = function () {
                $http.delete(apiURL + 'events/' + $routeParams.Id, $scope.edit)
                    .then(function (res) {
                        $location.path('/');
                    });
            };

        }]);

</s");
            WriteLiteral("cript>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
